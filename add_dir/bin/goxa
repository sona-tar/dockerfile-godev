#!/bin/sh
#
# @(#) goxa go cross compile and archive.
#
# pkg
# ├── archive
# │   └── 0.0.1
# │       ├── app-0.0.1-darwin_386.zip
# │       ├── app-0.0.1-darwin_amd64.zip
# │       ├── app-0.0.1-linux_386.tar.gz
# │       ├── app-0.0.1-linux_amd64.tar.gz
# │       ├── app-0.0.1-windows_386.zip
# │       └── app-0.0.1-windows_amd64.zip
# └── work
#     └── 0.0.1
#         ├── app-0.0.1-darwin_386
#         │   ├── app
#         │   └── README.md
#         ├── app-0.0.1-darwin_amd64
#         │   ├── app
#         │   └── README.md
#         ├── app-0.0.1-linux_386
#         │   ├── app
#         │   └── README.md
#         ├── app-0.0.1-linux_amd64
#         │   ├── app
#         │   └── README.md
#         ├── app-0.0.1-windows_386
#         │   ├── app.exe
#         │   └── README.md
#         └── app-0.0.1-windows_amd64
#             ├── app.exe
#             └── README.md

repo_root=$(pwd)

XC_VERSION=$1
[ -z "${XC_VERSION}" ] && echo "usage : goxa <version>" && exit 1

XC_ARCH=${XC_ARCH:-386 amd64}
XC_OS=${XC_OS:-linux darwin windows}

work_dir=${repo_root}/pkg/work/${XC_VERSION}

gox \
    -os="${XC_OS}" \
    -arch="${XC_ARCH}" \
    -output "${work_dir}/{{.Dir}}-${XC_VERSION}-{{.OS}}_{{.Arch}}/{{.Dir}}"

[ $? -ne 0 ] && echo "goxa failed" && exit 1

archive_dir=${repo_root}/pkg/archive/${XC_VERSION}
mkdir -p ${archive_dir}

cd ${work_dir}
for target in *;
do
    cp ${repo_root}/README.md ${target}
    if [ $(echo $target | grep linux) ]; then
        tar zcvf ${archive_dir}/${target}.tar.gz ${target}
    else
        zip -r ${archive_dir}/${target}.zip ${target}
    fi
done

echo "goxa finish!! You can release for Github that execute following command."
echo "$ ghr ${XC_VERSION} pkg/archive/${XC_VERSION}"
